version: 2

workflows:
    version: 2
    build_and_deploy:
        jobs:
            - build:
                filters:
                    tags:
                        only: /.*/
            - deploy:
                requires:
                    - build
                filters:
                    tags:
                        only: /.*/
                    branches:
                        ignore: /.*/


jobs:
    build:
        working_directory: "/workspace/src/flywheel.io/fw"

        docker:
            - image: buildpack-deps:bionic
              environment:
                MakeGenerateJunit: "1"

        steps:
            - checkout

            - restore_cache:
                key: cli-golang-1-{{ checksum "make.sh"}}-{{ checksum "glide.lock" }}

            - run:
                name: Install Python3 & UPX
                command: apt -y update && apt -y install python3 python3-pip python3-venv unzip upx

            - run:
                name: Build python packages
                command: ./make.sh buildPython

            - run:
                name: Install Dependencies
                command: ./make.sh glide install

            - run:
                name: Compile Standard Library
                command: ./make.sh prepareCrossBuild

            - save_cache:
                key: cli-golang-1-{{ checksum "make.sh"}}-{{ checksum "glide.lock" }}
                paths:
                    - "./.gimme"
                    - "./.glide"
                    - "/workspace/bin"

            - run:
                name: Compile
                command: ./make.sh cross

            - run:
                name: Check formatting
                command: ./make.sh formatCheck

            - run:
                name: Get musl
                command: apt -y install musl-tools && which musl-gcc

            - run:
                name: Make static
                command: |
                  CC=`which musl-gcc` ./make.sh go build -v --ldflags '-linkmode external -extldflags "-static"' fw.go \
                  && mv ./fw /workspace/bin/linux_amd64/fw \
                  && ./make.sh compressExecutable /workspace/bin/linux_amd64/fw

            - run:
                name: Cleanup
                command: rm -rf /workspace/bin/glide /workspace/bin/go-junit-report /workspace/bin/fw /workspace/bin/go-bindata
                when: always

            - store_artifacts:
                path: "/workspace/bin"
                destination: build

            - persist_to_workspace:
                root: "/workspace"
                paths: bin
    deploy:
        working_directory: "/workspace/src/flywheel.io/fw"
        docker:
            - image: google/cloud-sdk:latest

        steps:
            - checkout

            - attach_workspace:
                at: ./

            - run:
                name: Install dependencies
                command: apt-get update && apt-get install -y zip

            - run:
                name: Deploy binaries to gcloud
                command: .circleci/gcp-upload.sh
